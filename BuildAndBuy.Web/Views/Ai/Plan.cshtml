@model BuildAndBuy.Web.Models.AiPlanDto
@{
    ViewData["Title"] = Model.Title;
}

<div class="container my-4">

    @* Friendly error message (shown when AI is busy/unavailable) *@
    @if (!string.IsNullOrWhiteSpace(Model.Error))
    {
        <div class="alert alert-warning">
            <strong>Heads up:</strong> @Model.Error
        </div>
    }

    <div class="bb-card mb-3">
        <h2 class="mb-2">@Model.Title</h2>

        <div class="bb-badges">
            @if (Model.TimeMinutes.HasValue)
            {
                <span class="badge"><span class="me-1">‚è±</span>@Model.TimeMinutes min</span>
            }
            @if (Model.Difficulty.HasValue)
            {
                <span class="badge"><span class="me-1">‚≠ê</span>@Model.Difficulty/5</span>
            }
            @if (!string.IsNullOrWhiteSpace(Model.BudgetNote))
            {
                <span class="badge"><span class="me-1">üíµ</span>@Model.BudgetNote</span>
            }
        </div>
    </div>

    <div class="row g-3">
        <div class="col-lg-7">
            <div class="bb-card">
                <div class="bb-card-head">
                    <h4 class="mb-0">Steps</h4>
                    <button class="btn btn-sm btn-outline-secondary btn-icon" data-copy="#bb-steps-text" title="Copy steps">Copy</button>
                </div>
                <ol class="bb-steps" id="bb-steps-text">
                    @if (Model.Steps?.Count > 0)
                    {
                        @for (int i = 0; i < Model.Steps.Count; i++)
                        {
                            <li><span>@Model.Steps[i]</span></li>
                        }
                    }
                    else
                    {
                        <li class="text-muted">No steps returned.</li>
                    }
                </ol>
            </div>
        </div>

        <div class="col-lg-5">
            <div class="bb-card">
                <div class="bb-card-head">
                    <h4 class="mb-0">Materials</h4>
                    <button class="btn btn-sm btn-outline-secondary btn-icon" data-copy="#bb-materials-text" title="Copy materials">Copy</button>
                </div>
                <ul class="bb-list" id="bb-materials-text">
                    @if (Model.Materials?.Count > 0)
                    {
                        @foreach (var m in Model.Materials)
                        {
                            <li>
                                <strong>@m.Name</strong>
                                @if (!string.IsNullOrWhiteSpace(m.Specs)) { <span class="text-muted"> ‚Äî @m.Specs</span> }
                                @if (!string.IsNullOrWhiteSpace(m.Link)) {
                                    <a class="ms-2" target="_blank" rel="noopener" href="@m.Link">Buy</a>
                                }
                            </li>
                        }
                    }
                    else
                    {
                        <li class="text-muted">No materials provided.</li>
                    }
                </ul>
            </div>

            <div class="bb-card mt-3">
                <div class="bb-card-head">
                    <h4 class="mb-0">Safety</h4>
                    <button class="btn btn-sm btn-outline-secondary btn-icon" data-copy="#bb-safety-text" title="Copy safety">Copy</button>
                </div>
                <ul class="bb-list" id="bb-safety-text">
                    @if (Model.Safety?.Count > 0)
                    {
                        @foreach (var s in Model.Safety) { <li>@s</li> }
                    }
                    else
                    {
                        <li class="text-muted">No safety tips provided.</li>
                    }
                </ul>
            </div>
        </div>
    </div>

    <div class="mt-4 d-flex gap-2">
        <a class="btn btn-outline-secondary" asp-action="Index">Try another idea</a>

        @* Regenerate with the same prompt *@
        @if (!string.IsNullOrWhiteSpace(Model.OriginalPrompt))
        {
            <form asp-action="Index" method="post" class="d-inline" id="bb-regen-form">
                @Html.AntiForgeryToken()
                <input type="hidden" name="Prompt" value="@Model.OriginalPrompt" />
                <button id="bb-regen" class="btn btn-outline-primary" type="submit">
                    <span class="spinner-border spinner-border-sm me-2 d-none" role="status" aria-hidden="true"></span>
                    Regenerate
                </button>
            </form>
        }
    </div>

</div>

@section Scripts {
<script>
  // Simple copy helper for buttons with [data-copy="#selector"]
  document.querySelectorAll('[data-copy]').forEach(function(btn){
    btn.addEventListener('click', async function(){
      const sel = btn.getAttribute('data-copy');
      const el = document.querySelector(sel);
      if (!el) return;

      // Build plain text from lists
      let text = '';
      if (el.tagName === 'OL' || el.tagName === 'UL') {
        el.querySelectorAll('li').forEach((li, i) => {
          const line = (el.tagName === 'OL') ? `${i+1}. ${li.innerText}` : `‚Ä¢ ${li.innerText}`;
          text += line + '\n';
        });
      } else {
        text = el.innerText || '';
      }

      try {
        await navigator.clipboard.writeText(text.trim());
        const orig = btn.textContent;
        btn.textContent = 'Copied!';
        btn.disabled = true;
        setTimeout(() => { btn.textContent = orig; btn.disabled = false; }, 900);
      } catch(e) {
        alert('Copy failed. You can select and copy manually.');
      }
    });
  });

  // Regenerate loading state
  (function(){
    const regenForm = document.getElementById('bb-regen-form');
    if(!regenForm) return;
    const btn = document.getElementById('bb-regen');
    const spn = btn.querySelector('.spinner-border');
    regenForm.addEventListener('submit', function(){
      btn.disabled = true;
      if (spn) spn.classList.remove('d-none');
      // text swap (optional)
      const orig = btn.textContent;
      btn.dataset.orig = orig;
      btn.lastChild.textContent = ' Regenerating‚Ä¶';
    });
  })();
</script>
}
